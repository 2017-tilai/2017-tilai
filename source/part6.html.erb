---
  title: Osa 6
  exercise_page: true
  quiz_page: false
---
<% partial 'partials/material_heading' do %>
  Kuudennen viikon tehtävät
<% end %>
<p>
Tähän tekstiä suoran sovittamisesta ja PNS-menetelmästä.
</p>

<% partial 'partials/exercise', locals: { name: 'Resistance' } do %>

  <p>
  Tehtäväpohja on seuraavanlainen:
  </p>

  <% partial 'partials/code_highlight' do %>
  def func(param, xdata, ydata):
    return ydata - (param[0] + param[1]*xdata)
  def main():

  <% end %>

  <p>
  Tehtävänäsi on käyttää SciPyn Least square funktiota ja tehdä laboratoriosta saatuun dataan suoran sovitus. Data löytyy tiedostosta input.dat. Datassa ensimmäinen sarake on virta ja toinen sarake on jännite. Ratkaiset siis resistanssia. Muista tulostaa saamasi kulmakerroin, jotta tarkistus menee läpi!
  </p>

  <% partial 'partials/sample_output' do %>
R = 0.56
  <% end %>

<% end %>

<% partial 'partials/exercise', locals: { name: 'Least Squares' } do %>

  <p>
  Tehtäväpohja on seuraavanlainen:
  </p>

  <% partial 'partials/code_highlight' do %>
  def main():
    #Generate random data
    xdata = np.linspace(0,4,50)
    y_noise = 0.2 * np.random.normal(size=xdata.size)
    ydata = 3*xdata + y_noise
  <% end %>

  <p>
  Tehtävänäsi on käyttää SciPyn Least square funktiota ja tehdä suoran sovitus generoituun dataan. Muista tulostaa saamasi parametrit, jotta tarkistus menee läpi!
  </p>

  <% partial 'partials/sample_output' do %>
[-0.04193429  3.00553665]
  <% end %>

<% end %>

<% partial 'partials/exercise', locals: { name: 'Least Squares Nonlinear' } do %>

  <p>
  Tehtäväpohja on seuraavanlainen:
  </p>

  <% partial 'partials/code_highlight' do %>
  def main():
    #Generate random data
    xdata = np.linspace(-3,7,75)
    y_noise = 0.5 * np.random.normal(size=xdata.size)
    ydata = xdata**2 + y_noise
  <% end %>

  <p>
  Tehtävänäsi on käyttää SciPyn Least square funktiota ja tehdä X^2 sovitus generoituun dataan. Muista tulostaa saamasi parametrit, jotta tarkistus menee läpi!
  </p>

  <% partial 'partials/sample_output' do %>
[-0.02469396  0.99438934]
  <% end %>

<% end %>



<% partial 'partials/exercise', locals: { name: 'Least Squares Sine and Cosine' } do %>

  <p>
  Tehtäväpohja on seuraavanlainen:
  </p>

  <% partial 'partials/code_highlight' do %>
  def main():
    #Generate random data
    xdata = np.linspace(0,2*np.pi,100)
    y_noise = 0.2 * np.random.normal(size=xdata.size)
    ydata = np.sin(xdata) + np.cos(xdata) + y_noise
  <% end %>

  <p>
  Tehtävänäsi on käyttää SciPyn Least square funktiota ja tehdä Asin(x) + Bcos(x) sovitus generoituun dataan. Muista tulostaa saamasi parametrit, jotta tarkistus menee läpi!
  </p>

  <% partial 'partials/sample_output' do %>
[ 1.00423816  0.99764248]
  <% end %>

<% end %>


<% partial 'partials/exercise', locals: { name: 'Curve Fit' } do %>

  <p>
  Tehtäväpohja on seuraavanlainen:
  </p>

  <% partial 'partials/code_highlight' do %>
  def main():
    #Generoidaan random dataa
    xdata = np.linspace(0,4,50)
    y = func(xdata, 2, 3, 1)
    y_noise = 0.2 * np.random.normal(size=xdata.size)
    ydata = y + y_noise
  <% end %>

  <p>
  Tehtävänäsi on käyttää SciPyn Curve fit funktiota ja tehdä sovitus generoituun dataan. Muista tulostaa saamasi parametrit, jotta tarkistus menee läpi!
  </p>

  <% partial 'partials/sample_output' do %>
[ 1.7763289   3.02012127  1.06947269]
  <% end %>

<% end %>
